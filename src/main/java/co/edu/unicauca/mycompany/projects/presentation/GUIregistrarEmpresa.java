/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.mycompany.projects.presentation;

import co.edu.unicauca.mycompany.projects.access.CompanyMariaDBRepository;
import co.edu.unicauca.mycompany.projects.access.ProjectMariaDBRepository;
import co.edu.unicauca.mycompany.projects.domain.entities.Company;
import co.edu.unicauca.mycompany.projects.domain.entities.Sector;
import co.edu.unicauca.mycompany.projects.domain.services.CompanyService;
import co.edu.unicauca.mycompany.projects.infra.Messages;

/**
 *
 * @author Ana_Sofia
 */
public class GUIregistrarEmpresa extends javax.swing.JFrame {

    /**
     * Creates new form inicioSesion
     */
    private CompanyService companyService;

    public GUIregistrarEmpresa(CompanyService service) {
        this.companyService = service;
        initComponents();
        fillSectors();
    }

    private void fillSectors() {
        cboComSector.removeAllItems();
        for (Sector sector : Sector.values()) {
            cboComSector.addItem(sector.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtComContactCharge = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtComNit = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtComName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtComContactLastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtComContactPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtComContactName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtComEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboComSector = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtComPassword = new javax.swing.JPasswordField();
        txtComConfirmPassword = new javax.swing.JPasswordField();
        rbSeePassword = new javax.swing.JRadioButton();
        rbSeeConfirmPassword = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(38, 42, 65));
        jLabel1.setText("Registrar empresa");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel2.setText("*Nombres de contacto");

        txtComContactCharge.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactCharge.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactCharge.setBorder(null);
        txtComContactCharge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactChargeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactChargeFocusLost(evt);
            }
        });
        txtComContactCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactChargeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel3.setText("*Nombre de la empresa");

        txtComNit.setBackground(new java.awt.Color(227, 230, 235));
        txtComNit.setForeground(new java.awt.Color(130, 134, 140));
        txtComNit.setBorder(null);
        txtComNit.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtComNit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComNitFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComNitFocusLost(evt);
            }
        });
        txtComNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComNitActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(95, 97, 112));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnRegistrar.setBackground(new java.awt.Color(41, 64, 211));
        btnRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel4.setText("*Email");

        txtComName.setBackground(new java.awt.Color(227, 230, 235));
        txtComName.setForeground(new java.awt.Color(130, 134, 140));
        txtComName.setBorder(null);
        txtComName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComNameFocusLost(evt);
            }
        });
        txtComName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel5.setText("*Nit de la empresa");

        txtComContactLastName.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactLastName.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactLastName.setBorder(null);
        txtComContactLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactLastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactLastNameFocusLost(evt);
            }
        });
        txtComContactLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactLastNameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel6.setText("*Telefono de contacto");

        txtComContactPhone.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactPhone.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactPhone.setBorder(null);
        txtComContactPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactPhoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactPhoneFocusLost(evt);
            }
        });
        txtComContactPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactPhoneActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel7.setText("*Apellidos de contacto");

        txtComContactName.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactName.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactName.setBorder(null);
        txtComContactName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactNameFocusLost(evt);
            }
        });
        txtComContactName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactNameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel8.setText("*Sector");

        txtComEmail.setBackground(new java.awt.Color(227, 230, 235));
        txtComEmail.setForeground(new java.awt.Color(130, 134, 140));
        txtComEmail.setBorder(null);
        txtComEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComEmailFocusLost(evt);
            }
        });
        txtComEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComEmailActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel9.setText("*Cargo del contacto");

        cboComSector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel10.setText("*Contraseña");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel11.setText("*Confirmar contraseña");

        txtComPassword.setBackground(new java.awt.Color(227, 230, 235));

        txtComConfirmPassword.setBackground(new java.awt.Color(227, 230, 235));

        rbSeePassword.setText("ver");
        rbSeePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSeePasswordActionPerformed(evt);
            }
        });

        rbSeeConfirmPassword.setText("ver");
        rbSeeConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSeeConfirmPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 113, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(txtComName, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(txtComEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(txtComNit)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(txtComPassword)
                            .addComponent(txtComConfirmPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbSeePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbSeeConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtComContactLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(txtComContactName, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(txtComContactPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jLabel9)
                            .addComponent(txtComContactCharge, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addComponent(cboComSector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(51, 51, 51))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(247, 247, 247))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboComSector)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComNit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, 0)
                        .addComponent(txtComEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbSeePassword))
                        .addGap(9, 9, 9)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbSeeConfirmPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnCancelar))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void txtComContactChargeActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void txtComNitActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        //Recuperación de datos ingresados por el usuario
        String comNit = txtComNit.getText().trim();
        String comName = txtComName.getText().trim();
        String comSector = cboComSector.getSelectedItem().toString().trim();
        String comEmail = txtComEmail.getText().trim();
        String comPassword = new String(txtComPassword.getPassword()).trim();
        String comConfirmPassword = new String(txtComConfirmPassword.getPassword()).trim();
        String comContactName = txtComContactName.getText().trim();
        String comContactLastName = txtComContactLastName.getText().trim();
        String comContactCharge = txtComContactCharge.getText().trim();
        String comContactPhone = txtComContactPhone.getText().trim();

        // Validación de campos obligatorios
        //Nit no ingresado
        if (comNit.isEmpty()) {
            Messages.showMessageDialog("Debe agregar el NIT", "Atención");
            txtComNit.requestFocus();
            return;
        }
        //Nombre de empresa no ingresado
        if (comName.isEmpty()) {
            Messages.showMessageDialog("Debe agregar el nombre", "Atención");
            txtComName.requestFocus();
            return;
        }
        //Sector no ingresado
        if (comSector.isEmpty()) {
            Messages.showMessageDialog("Debe seleccionar un sector industrial", "Atención");
            cboComSector.requestFocus();
            return;
        }
        //Email no ingresado
        if (comEmail.isEmpty()) {
            Messages.showMessageDialog("Debe agregar un correo electrónico", "Atención");
            txtComEmail.requestFocus();
            return;
        }
        //Contraseña no ingresada
        if (comPassword.isEmpty()) {
            Messages.showMessageDialog("Debe agregar una contraseña", "Atención");
            txtComPassword.requestFocus();
            return;
        }
        //Confirmar contraseña no ingresado
        if (comConfirmPassword.isEmpty()) {
            Messages.showMessageDialog("Debe confirmar la contraseña", "Atención");
            txtComConfirmPassword.requestFocus();
            return;
        }
        //nombre contacto no ingresado
        if (comContactName.isEmpty()) {
            Messages.showMessageDialog("Debe agregar un nombre de contacto", "Atención");
            txtComContactName.requestFocus();
            return;
        }
        //Apellido contacto no ingresado
        if (comContactLastName.isEmpty()) {
            Messages.showMessageDialog("Debe agregar un apellido de contacto", "Atención");
            txtComContactLastName.requestFocus();
            return;
        }
        //Cargo contacto no ingresado
        if (comContactCharge.isEmpty()) {
            Messages.showMessageDialog("Debe agregar un cargo de contacto", "Atención");
            txtComContactCharge.requestFocus();
            return;
        }
        //Telefono contacto no ingresado
        if (comContactPhone.isEmpty()) {
            Messages.showMessageDialog("Debe agregar un telefono de contacto", "Atención");
            txtComContactPhone.requestFocus();
            return;
        }

        /* Validación de reglas de negocio*/
        //Validar que el email sea valido
        if (!companyService.isValidEmail(comEmail)) {
            Messages.showMessageDialog("El correo electrónico no es válido", "Atención");
            txtComEmail.requestFocus();
            return;
        }
        // Validaciones NIT
        if (!companyService.isNITNumeric(comNit)) {
            Messages.showMessageDialog("El NIT debe contener solo números", "Atención");
            txtComNit.requestFocus();
            return;
        }
        if (!companyService.isNITLengthValid(comNit)) {
            Messages.showMessageDialog("El NIT tener entre 2 y 20 dígitos.", "Atención");
            txtComNit.requestFocus();
            return;
        }

        // Validación del nombre de la empresa
        if (!companyService.isStringValid(comName)) {
            if (comName.length() < 1 || comName.length() > 20) {
                Messages.showMessageDialog("El nombre debe tener entre 1 y 20 caracteres", "Atención");
            } else {
                Messages.showMessageDialog("El nombre debe contener solo letras", "Atención");
            }
            txtComName.requestFocus();
            return;
        }

        // Validación del teléfono de contacto
        if (!companyService.isPhoneValid(comContactPhone)) {
            Messages.showMessageDialog("El teléfono debe contener exactamente 10 dígitos.", "Atención");
            txtComContactPhone.requestFocus();
            return;
        }
        if (!companyService.isPhoneNotAllSameDigits(comContactPhone)) {
            Messages.showMessageDialog("El teléfono no debe contener números repetidos 10 veces", "Atención");
            txtComContactPhone.requestFocus();
            return;
        }
        if (!companyService.isNITNumeric(comContactPhone)) { // Usamos isNITNumeric para verificar que contenga solo números
            Messages.showMessageDialog("El teléfono debe contener únicamente números enteros positivos", "Atención");
            txtComContactPhone.requestFocus();
            return;
        }

        // Validación de nombres del contacto
        if (!companyService.isStringValid(comContactName)) {
            if (comContactName.length() < 1 || comContactName.length() > 20) {
                Messages.showMessageDialog("El nombre del contacto debe tener entre 1 y 20 caracteres", "Atención");
            } else {
                Messages.showMessageDialog("El nombre del contacto debe contener solo letras", "Atención");
            }
            txtComContactName.requestFocus();
            return;
        }

        // Validación de apellidos del contacto
        if (!companyService.isStringValid(comContactLastName)) {
            if (comContactLastName.length() < 1 || comContactLastName.length() > 20) {
                Messages.showMessageDialog("El apellido del contacto debe tener entre 1 y 20 caracteres", "Atención");
            } else {
                Messages.showMessageDialog("El apellido del contacto debe contener solo letras", "Atención");
            }
            txtComContactLastName.requestFocus();
            return;
        }

        // Validación del cargo del contacto
        if (!companyService.isStringValid(comContactCharge)) {
            if (comContactCharge.length() < 1 || comContactCharge.length() > 20) {
                Messages.showMessageDialog("El cargo del contacto debe tener entre 1 y 20 caracteres", "Atención");
            } else {
                Messages.showMessageDialog("El cargo del contacto debe contener solo letras", "Atención");
            }
            txtComContactCharge.requestFocus();
            return;
        }
        if (!companyService.arePasswordsMatching(comPassword, comConfirmPassword)) {
            Messages.showMessageDialog("Las contraseñas ingresadas no coinciden, por favor verifique.", "Atención");
            txtComPassword.requestFocus();
            return;
        }

        // Convertir el sector seleccionado a enum
        Sector sector = Sector.valueOf(comSector.toUpperCase());
        Company company = new Company(comNit, comName, comEmail, comContactPhone, comContactName, comContactLastName, comContactPhone, sector);
        //Registro de empresas
        if (companyService.saveCompany(company)) {
            Messages.showMessageDialog("Empresa registrada", "Confirmación");
            

        } else {
            Messages.showMessageDialog("Error al registrar empresa", "Error");
        }

    }                                            
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIDashboardEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIDashboardEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIDashboardEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIDashboardEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        CompanyMariaDBRepository repository = new CompanyMariaDBRepository();
        CompanyService companyService = new CompanyService(repository);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIregistrarEmpresa(companyService).setVisible(true);
            }
        });
    }
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtComNameActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void txtComContactLastNameActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void txtComContactPhoneActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void txtComContactNameActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void txtComEmailActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtComNitFocusGained(java.awt.event.FocusEvent evt) {                                      
        // TODO add your handling code here:
        if (txtComNit.getText().equals("Ingrese el NIT")) {
            txtComNit.setText("");
        }
    }                                     

    private void txtComNitFocusLost(java.awt.event.FocusEvent evt) {                                    
        // TODO add your handling code here:
        if (txtComNit.getText().isEmpty()) {
            //txtNit.setForeground(Color.GRAY);
            txtComNit.setText("Ingrese el NIT");
        }
    }                                   

    private void txtComNameFocusGained(java.awt.event.FocusEvent evt) {                                       
        // TODO add your handling code here:
        if (txtComName.getText().equals("Ingrese el nombre de la empresa")) {
            txtComName.setText("");
        }
    }                                      

    private void txtComNameFocusLost(java.awt.event.FocusEvent evt) {                                     
        // TODO add your handling code here:
        if (txtComName.getText().isEmpty()) {
            //txtNit.setForeground(Color.GRAY);
            txtComName.setText("Ingrese el nombre de la empresa");
        }
    }                                    

    private void txtComEmailFocusGained(java.awt.event.FocusEvent evt) {                                        
        // TODO add your handling code here:
        if (txtComEmail.getText().equals("Ingrese el correo de la empresa")) {
            txtComEmail.setText("");
        }
    }                                       

    private void txtComEmailFocusLost(java.awt.event.FocusEvent evt) {                                      
        // TODO add your handling code here:
        if (txtComEmail.getText().isEmpty()) {
            txtComEmail.setText("Ingrese el correo de la empresa");
        }
    }                                     

    private void txtComContactPhoneFocusGained(java.awt.event.FocusEvent evt) {                                               
        // TODO add your handling code here:
        if (txtComContactPhone.getText().equals("Ingrese el telefono del contacto")) {
            txtComContactPhone.setText("");
        }
    }                                              

    private void txtComContactPhoneFocusLost(java.awt.event.FocusEvent evt) {                                             
        // TODO add your handling code here:
        if (txtComContactPhone.getText().isEmpty()) {
            //txtNit.setForeground(Color.GRAY);
            txtComContactPhone.setText("Ingrese el telefono del contacto");
        }
    }                                            

    private void txtComContactNameFocusGained(java.awt.event.FocusEvent evt) {                                              
        // TODO add your handling code here:
        if (txtComContactName.getText().equals("Ingrese el nombre del contacto")) {
            //txtNit.setForeground(Color.GRAY);
            txtComContactName.setText("");
        }
    }                                             

    private void txtComContactNameFocusLost(java.awt.event.FocusEvent evt) {                                            
        // TODO add your handling code here:
        if (txtComContactName.getText().isEmpty()) {
            //txtNit.setForeground(Color.GRAY);
            txtComContactName.setText("Ingrese el nombre del contacto");
        }
    }                                           

    private void txtComContactLastNameFocusGained(java.awt.event.FocusEvent evt) {                                                  
        // TODO add your handling code here:
        if (txtComContactLastName.getText().equals("Ingrese el apellido del contacto")) {
            txtComContactLastName.setText("");
        }
    }                                                 

    private void txtComContactLastNameFocusLost(java.awt.event.FocusEvent evt) {                                                
        // TODO add your handling code here:
        if (txtComContactLastName.getText().isEmpty()) {
            txtComContactLastName.setText("Ingrese el apellido del contacto");
        }
    }                                               

    private void txtComContactChargeFocusGained(java.awt.event.FocusEvent evt) {                                                
        // TODO add your handling code here:
        if (txtComContactCharge.getText().equals("Ingrese el cargo del contacto")) {
            txtComContactCharge.setText("");
        }

    }                                               

    private void txtComContactChargeFocusLost(java.awt.event.FocusEvent evt) {                                              
        // TODO add your handling code here:
        if (txtComContactCharge.getText().isEmpty()) {
            txtComContactCharge.setText("Ingrese el cargo del contacto");
        }
    }                                             

    private void rbSeePasswordActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        if (rbSeePassword.isSelected()) {
            // Mostrar contraseña
            txtComPassword.setEchoChar((char) 0);
        } else {
            // Ocultar contraseña
            txtComPassword.setEchoChar('*'); // Puedes cambiar '*' por el carácter que prefieras
        }
    }                                             

    private void rbSeeConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // TODO add your handling code here:
        if (rbSeeConfirmPassword.isSelected()) {
            // Mostrar contraseña
            txtComConfirmPassword.setEchoChar((char) 0);
        } else {
            // Ocultar contraseña
            txtComConfirmPassword.setEchoChar('*');
        }
    }                                                    

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cboComSector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton rbSeeConfirmPassword;
    private javax.swing.JRadioButton rbSeePassword;
    private javax.swing.JPasswordField txtComConfirmPassword;
    private javax.swing.JTextField txtComContactCharge;
    private javax.swing.JTextField txtComContactLastName;
    private javax.swing.JTextField txtComContactName;
    private javax.swing.JTextField txtComContactPhone;
    private javax.swing.JTextField txtComEmail;
    private javax.swing.JTextField txtComName;
    private javax.swing.JTextField txtComNit;
    private javax.swing.JPasswordField txtComPassword;
    // End of variables declaration                   
}
